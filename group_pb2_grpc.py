# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import group_pb2 as group__pb2
import uc_types_pb2 as uc__types__pb2


class GroupChatServiceStub(object):
    """*
    Сервис для работы с API групп
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_info = channel.unary_unary(
                '/protei.uc.api.GroupChatService/get_info',
                request_serializer=uc__types__pb2.GroupChatInfoRequest.SerializeToString,
                response_deserializer=uc__types__pb2.GroupChatInfoResponse.FromString,
                )
        self.create = channel.unary_unary(
                '/protei.uc.api.GroupChatService/create',
                request_serializer=uc__types__pb2.CreateGroupChatRequest.SerializeToString,
                response_deserializer=uc__types__pb2.CreateGroupChatResponse.FromString,
                )
        self.update = channel.unary_unary(
                '/protei.uc.api.GroupChatService/update',
                request_serializer=uc__types__pb2.SetChatOptionsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.delete = channel.unary_unary(
                '/protei.uc.api.GroupChatService/delete',
                request_serializer=group__pb2.DeleteGroupRequest.SerializeToString,
                response_deserializer=group__pb2.DeleteGroupResponse.FromString,
                )
        self.add_member = channel.unary_unary(
                '/protei.uc.api.GroupChatService/add_member',
                request_serializer=group__pb2.AddMemberToGroupRequest.SerializeToString,
                response_deserializer=group__pb2.AddMemberToGroupResponse.FromString,
                )
        self.delete_member = channel.unary_unary(
                '/protei.uc.api.GroupChatService/delete_member',
                request_serializer=group__pb2.DeleteMemberFromGroupRequest.SerializeToString,
                response_deserializer=group__pb2.DeleteMemberFromGroupResponse.FromString,
                )
        self.send_message = channel.unary_unary(
                '/protei.uc.api.GroupChatService/send_message',
                request_serializer=group__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=group__pb2.SendMessageResponse.FromString,
                )
        self.mark_last_read_event = channel.unary_unary(
                '/protei.uc.api.GroupChatService/mark_last_read_event',
                request_serializer=uc__types__pb2.MarkGroupEventAsReadRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.mark_last_delivered_event = channel.unary_unary(
                '/protei.uc.api.GroupChatService/mark_last_delivered_event',
                request_serializer=uc__types__pb2.MarkGroupEventAsDeliveredRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.delete_event = channel.unary_unary(
                '/protei.uc.api.GroupChatService/delete_event',
                request_serializer=uc__types__pb2.DeleteGroupChatEventRequest.SerializeToString,
                response_deserializer=uc__types__pb2.DeleteGroupChatEventResponse.FromString,
                )
        self.change_event = channel.unary_unary(
                '/protei.uc.api.GroupChatService/change_event',
                request_serializer=uc__types__pb2.ChangeGroupChatEventRequest.SerializeToString,
                response_deserializer=uc__types__pb2.ChangeGroupChatEventResponse.FromString,
                )
        self.get_members = channel.unary_unary(
                '/protei.uc.api.GroupChatService/get_members',
                request_serializer=group__pb2.GetMembersRequest.SerializeToString,
                response_deserializer=group__pb2.GetMembersResponse.FromString,
                )
        self.update_members_list = channel.unary_unary(
                '/protei.uc.api.GroupChatService/update_members_list',
                request_serializer=group__pb2.UpdateMembersListRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.change_member_role = channel.unary_unary(
                '/protei.uc.api.GroupChatService/change_member_role',
                request_serializer=group__pb2.ChangeMemberRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class GroupChatServiceServicer(object):
    """*
    Сервис для работы с API групп
    """

    def get_info(self, request, context):
        """Метод для получения информации о группе
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """Метод для изменения информации о группе
        rpc set_info(SetGroupChatInfoRequest) returns (SetGroupChatInfoResponse);
        Метод для создания группы
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Метод предназначен для изменения сообщения в чате
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Метод для удаления группы
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_member(self, request, context):
        """Метод для добавления участника в группу
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_member(self, request, context):
        """Метод для удаления участника из группы
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_message(self, request, context):
        """Метод для отправки сообщения в группу
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def mark_last_read_event(self, request, context):
        """Метод активации группового вызова
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def mark_last_delivered_event(self, request, context):
        """Метод предназначен для пометки последнего доставленного сообщения в чате
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_event(self, request, context):
        """Метод предназначен для удаления сообщения в чате
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def change_event(self, request, context):
        """Метод предназначен для изменения сообщения в чате
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_members(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_members_list(self, request, context):
        """обновить список участников
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def change_member_role(self, request, context):
        """поменять роль участника группы
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GroupChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_info,
                    request_deserializer=uc__types__pb2.GroupChatInfoRequest.FromString,
                    response_serializer=uc__types__pb2.GroupChatInfoResponse.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=uc__types__pb2.CreateGroupChatRequest.FromString,
                    response_serializer=uc__types__pb2.CreateGroupChatResponse.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=uc__types__pb2.SetChatOptionsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=group__pb2.DeleteGroupRequest.FromString,
                    response_serializer=group__pb2.DeleteGroupResponse.SerializeToString,
            ),
            'add_member': grpc.unary_unary_rpc_method_handler(
                    servicer.add_member,
                    request_deserializer=group__pb2.AddMemberToGroupRequest.FromString,
                    response_serializer=group__pb2.AddMemberToGroupResponse.SerializeToString,
            ),
            'delete_member': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_member,
                    request_deserializer=group__pb2.DeleteMemberFromGroupRequest.FromString,
                    response_serializer=group__pb2.DeleteMemberFromGroupResponse.SerializeToString,
            ),
            'send_message': grpc.unary_unary_rpc_method_handler(
                    servicer.send_message,
                    request_deserializer=group__pb2.SendMessageRequest.FromString,
                    response_serializer=group__pb2.SendMessageResponse.SerializeToString,
            ),
            'mark_last_read_event': grpc.unary_unary_rpc_method_handler(
                    servicer.mark_last_read_event,
                    request_deserializer=uc__types__pb2.MarkGroupEventAsReadRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'mark_last_delivered_event': grpc.unary_unary_rpc_method_handler(
                    servicer.mark_last_delivered_event,
                    request_deserializer=uc__types__pb2.MarkGroupEventAsDeliveredRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'delete_event': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_event,
                    request_deserializer=uc__types__pb2.DeleteGroupChatEventRequest.FromString,
                    response_serializer=uc__types__pb2.DeleteGroupChatEventResponse.SerializeToString,
            ),
            'change_event': grpc.unary_unary_rpc_method_handler(
                    servicer.change_event,
                    request_deserializer=uc__types__pb2.ChangeGroupChatEventRequest.FromString,
                    response_serializer=uc__types__pb2.ChangeGroupChatEventResponse.SerializeToString,
            ),
            'get_members': grpc.unary_unary_rpc_method_handler(
                    servicer.get_members,
                    request_deserializer=group__pb2.GetMembersRequest.FromString,
                    response_serializer=group__pb2.GetMembersResponse.SerializeToString,
            ),
            'update_members_list': grpc.unary_unary_rpc_method_handler(
                    servicer.update_members_list,
                    request_deserializer=group__pb2.UpdateMembersListRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'change_member_role': grpc.unary_unary_rpc_method_handler(
                    servicer.change_member_role,
                    request_deserializer=group__pb2.ChangeMemberRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protei.uc.api.GroupChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GroupChatService(object):
    """*
    Сервис для работы с API групп
    """

    @staticmethod
    def get_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/get_info',
            uc__types__pb2.GroupChatInfoRequest.SerializeToString,
            uc__types__pb2.GroupChatInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/create',
            uc__types__pb2.CreateGroupChatRequest.SerializeToString,
            uc__types__pb2.CreateGroupChatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/update',
            uc__types__pb2.SetChatOptionsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/delete',
            group__pb2.DeleteGroupRequest.SerializeToString,
            group__pb2.DeleteGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_member(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/add_member',
            group__pb2.AddMemberToGroupRequest.SerializeToString,
            group__pb2.AddMemberToGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_member(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/delete_member',
            group__pb2.DeleteMemberFromGroupRequest.SerializeToString,
            group__pb2.DeleteMemberFromGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_message(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/send_message',
            group__pb2.SendMessageRequest.SerializeToString,
            group__pb2.SendMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def mark_last_read_event(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/mark_last_read_event',
            uc__types__pb2.MarkGroupEventAsReadRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def mark_last_delivered_event(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/mark_last_delivered_event',
            uc__types__pb2.MarkGroupEventAsDeliveredRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_event(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/delete_event',
            uc__types__pb2.DeleteGroupChatEventRequest.SerializeToString,
            uc__types__pb2.DeleteGroupChatEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def change_event(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/change_event',
            uc__types__pb2.ChangeGroupChatEventRequest.SerializeToString,
            uc__types__pb2.ChangeGroupChatEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_members(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/get_members',
            group__pb2.GetMembersRequest.SerializeToString,
            group__pb2.GetMembersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_members_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/update_members_list',
            group__pb2.UpdateMembersListRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def change_member_role(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.GroupChatService/change_member_role',
            group__pb2.ChangeMemberRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
