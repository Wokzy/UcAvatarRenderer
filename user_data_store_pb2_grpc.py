# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import gen_proto_types_pb2 as gen__proto__types__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import uc_types_pb2 as uc__types__pb2
import user_data_store_pb2 as user__data__store__pb2


class UserDataStoreServiceStub(object):
    """*
    Сервис для взаимодействия с БД настроек пользователя
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_user_info = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/get_user_info',
                request_serializer=user__data__store__pb2.GetUserInfoRequest.SerializeToString,
                response_deserializer=uc__types__pb2.GetUserInfoResponse.FromString,
                )
        self.get_users_info = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/get_users_info',
                request_serializer=user__data__store__pb2.GetUsersInfoRequest.SerializeToString,
                response_deserializer=user__data__store__pb2.GetUsersInfoResponse.FromString,
                )
        self.update_user_info = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/update_user_info',
                request_serializer=user__data__store__pb2.UpdateUserInfoRequest.SerializeToString,
                response_deserializer=gen__proto__types__pb2.GeneralResponse.FromString,
                )
        self.create_user = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/create_user',
                request_serializer=user__data__store__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=user__data__store__pb2.CreateUserResponse.FromString,
                )
        self.delete_user = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/delete_user',
                request_serializer=user__data__store__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=gen__proto__types__pb2.GeneralResponse.FromString,
                )
        self.get_user_ids = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/get_user_ids',
                request_serializer=user__data__store__pb2.GetUserIdsRequest.SerializeToString,
                response_deserializer=user__data__store__pb2.GetUserIdsResponse.FromString,
                )
        self.get_external_user_ids = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/get_external_user_ids',
                request_serializer=user__data__store__pb2.GetExternalUserIdsRequest.SerializeToString,
                response_deserializer=user__data__store__pb2.GetUserExternalIdsResponse.FromString,
                )
        self.get_user_list = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/get_user_list',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=user__data__store__pb2.GetUserListResponse.FromString,
                )
        self.get_user_phone_map = channel.unary_unary(
                '/protei.uc.api.UserDataStoreService/get_user_phone_map',
                request_serializer=user__data__store__pb2.GetUserPhoneMapRequest.SerializeToString,
                response_deserializer=user__data__store__pb2.GetUserPhoneMapResponse.FromString,
                )


class UserDataStoreServiceServicer(object):
    """*
    Сервис для взаимодействия с БД настроек пользователя
    """

    def get_user_info(self, request, context):
        """Метод для получения информации о пользователе по его id (внутреннему или внешнему)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_users_info(self, request, context):
        """Метод для получения информации о списке пользователей по их идентификаторам (внутреннему или внешнему)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_user_info(self, request, context):
        """Метод для обновления общей информации о пользователе.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create_user(self, request, context):
        """Метод для создания новой учетной записи пользователя UC с привязкой его к внешнему идентификатору.
        В случае, если пользователь с данным внешним идентификатором уже существует, команда сообщает идентификатор данного пользователя.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_user(self, request, context):
        """Метод предназначен для удаления учетной записи пользователя UC. В случае, если указан признак "подчистки" данных,
        то после удаления пользователя все данные по нему будут так же удалены.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_user_ids(self, request, context):
        """Метод предназначен для получения внутренних идентификаторов пользователей на основе внешних идентификаторов.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_external_user_ids(self, request, context):
        """Метод предназначен для получения внешних идентификаторов пользователей на основе внутренних идентификаторов.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_user_list(self, request, context):
        """Метод предназначен для получения списка пользователей UC.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_user_phone_map(self, request, context):
        """Метод предназначен для получения списка пользователей с их номерами телефонов
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserDataStoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_user_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_user_info,
                    request_deserializer=user__data__store__pb2.GetUserInfoRequest.FromString,
                    response_serializer=uc__types__pb2.GetUserInfoResponse.SerializeToString,
            ),
            'get_users_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_users_info,
                    request_deserializer=user__data__store__pb2.GetUsersInfoRequest.FromString,
                    response_serializer=user__data__store__pb2.GetUsersInfoResponse.SerializeToString,
            ),
            'update_user_info': grpc.unary_unary_rpc_method_handler(
                    servicer.update_user_info,
                    request_deserializer=user__data__store__pb2.UpdateUserInfoRequest.FromString,
                    response_serializer=gen__proto__types__pb2.GeneralResponse.SerializeToString,
            ),
            'create_user': grpc.unary_unary_rpc_method_handler(
                    servicer.create_user,
                    request_deserializer=user__data__store__pb2.CreateUserRequest.FromString,
                    response_serializer=user__data__store__pb2.CreateUserResponse.SerializeToString,
            ),
            'delete_user': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_user,
                    request_deserializer=user__data__store__pb2.DeleteUserRequest.FromString,
                    response_serializer=gen__proto__types__pb2.GeneralResponse.SerializeToString,
            ),
            'get_user_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_user_ids,
                    request_deserializer=user__data__store__pb2.GetUserIdsRequest.FromString,
                    response_serializer=user__data__store__pb2.GetUserIdsResponse.SerializeToString,
            ),
            'get_external_user_ids': grpc.unary_unary_rpc_method_handler(
                    servicer.get_external_user_ids,
                    request_deserializer=user__data__store__pb2.GetExternalUserIdsRequest.FromString,
                    response_serializer=user__data__store__pb2.GetUserExternalIdsResponse.SerializeToString,
            ),
            'get_user_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_user_list,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=user__data__store__pb2.GetUserListResponse.SerializeToString,
            ),
            'get_user_phone_map': grpc.unary_unary_rpc_method_handler(
                    servicer.get_user_phone_map,
                    request_deserializer=user__data__store__pb2.GetUserPhoneMapRequest.FromString,
                    response_serializer=user__data__store__pb2.GetUserPhoneMapResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protei.uc.api.UserDataStoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserDataStoreService(object):
    """*
    Сервис для взаимодействия с БД настроек пользователя
    """

    @staticmethod
    def get_user_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/get_user_info',
            user__data__store__pb2.GetUserInfoRequest.SerializeToString,
            uc__types__pb2.GetUserInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_users_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/get_users_info',
            user__data__store__pb2.GetUsersInfoRequest.SerializeToString,
            user__data__store__pb2.GetUsersInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_user_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/update_user_info',
            user__data__store__pb2.UpdateUserInfoRequest.SerializeToString,
            gen__proto__types__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create_user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/create_user',
            user__data__store__pb2.CreateUserRequest.SerializeToString,
            user__data__store__pb2.CreateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/delete_user',
            user__data__store__pb2.DeleteUserRequest.SerializeToString,
            gen__proto__types__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_user_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/get_user_ids',
            user__data__store__pb2.GetUserIdsRequest.SerializeToString,
            user__data__store__pb2.GetUserIdsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_external_user_ids(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/get_external_user_ids',
            user__data__store__pb2.GetExternalUserIdsRequest.SerializeToString,
            user__data__store__pb2.GetUserExternalIdsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_user_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/get_user_list',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            user__data__store__pb2.GetUserListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_user_phone_map(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protei.uc.api.UserDataStoreService/get_user_phone_map',
            user__data__store__pb2.GetUserPhoneMapRequest.SerializeToString,
            user__data__store__pb2.GetUserPhoneMapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
